# # # 1. ohlc 리스트에는 시가(open), 고가 (high), 저가 (low) , 종가(close)가 날짜별로 저장돼 있다. 화면에 종가데이터를 출력하라.

ohlc = [["open", "high", "low", "close"],[100, 110, 70, 100], [200, 210, 180, 190],[300, 310, 300, 310]]

# # # 출력 결과:
# # # 100
# # # 190
# # # 310

# # # for o in ohlc:

for o in ohlc[1:] :print( o[3])





# 2. 주민등록번호 뒷 자리 7자리 중 첫째 자리는 성별을 나타내는데, 1, 3은 남자 2, 4는 여자를 의미한다. 
# 사용자로부터 13자리의 주민등록번호를 입력 받은 후 성별 (남자, 여자)를 출력하는 프로그램을 작성하라.

# 입력 : 821010-1635210

# 출력 : 남자

data='821010-1635210'
datas=int(data[7])

if datas==1 or datas==3 :
    print('남자')
elif datas ==2 or datas==4 :
    print("여자")
else  :
    print('누구냐')



mm=[90,25,67,45,80]

s=0
for m in mm :
    s=s+1
    if m>60 :
        print(f'{s}축하축하')





s=0
for m in mm :
    s=s+1
    if m<60 :
        continue
    print(f'{s}축하축하')
























# #-----------------------------------------------------------------------------------------
# a=range(10)
# print(a)  #-> range로 출력


# a=list(range(10))#-->리스트나 튜플로 묶어줘야 됨
# print(a)

# a=range(2,11,2)
# print(a)

# a=list(range(2,11,2))
# print(a)

# range(10,0,-1)

# range()

# a=list("hellow")
# print(a)

# a=[1,2,3]
# a,b,c=[1,2,3]
# print(a)
# print(b)
# print(c)

# #1~20 홀수만 생성

# a=tuple(range(1,21,2))
# print(a)





# a=[1,2,3,4,5,6,7,8,9,10]
# a[1:3]=['a','b']

# print(a)

# a=[0,1,2,3,4,5,6,7,8,9]
# a[2:5]='z'


# del!!!!!!!

# a='hello'#---> 홀수 인덱스 
# b='python'#----> 짝수 인덱스

# aa=a[1::2]
# bb=b[::2]

# print(aa)
# print(bb)

# print(aa+bb)
# #출력 ---> elpto



#--------------------------------------------------------------------------
# dict
#--------------------------------------------------------------------------
'''
* 생성하는 방법

1. 직접입력
a={'a': 1, 'b' : 2 }

2. dict함수 사용 
b=dict(a=1, b=2) 

# lus = {'a': 400, 'b' : 380 ,'c': 270, 'd' : 100 }
# 380을 뽑고 싶은 경우 >>> lus['b']

메서드
lus.keys() >>> key값만 뽑고싶을때
lus.values() >>> value값만 뽑고싶을때
lus.items() >>> 지정된 위치 값만 뽑고싶을때 >>> 3개다 list 형식으로 만들어준다.

key가 우선적으로 취급

'''
lus = {'a': 400, 'b' : 380 ,'c': 270, 'd' : 100 }
print(lus.items())
print(lus.keys()) 

#--------------------------------------------------------------------------
# tuple
#--------------------------------------------------------------------------
# 변경, 수정 불가
# 3 == (3) >> int , (3,) > tuple
# list()처럼 range를 함수 tuple()로 만들 수 있다.



# 리터러블 객체 > 연속되는(반복되는,다음이있는) 자료형 > range, str

# 시퀀스 >1. 블변 시퀀스(str,tuple)  , 2. 변경 시퀀스(list)

# 대입연산자 '=' >>> 할당
# 비교연산자 '==' >>> True False

# del 변수[인덱스] >> 그 부분 삭제

#--------------------------------------------------------------------------
# map
#--------------------------------------------------------------------------
'''
int(str)을 사용하면 int 로 출력한다.

but
int([]) >> 리스트를 int로 변환하게 된다면 ERROR

So
map을 사용
map(사용할 함수 , 리스트[리터러블 객체] )  >>>> 리스트에 있는 값을 함수에 하나씩 대입

'''

#--------------------------------------------------------------------------
# zip
#--------------------------------------------------------------------------
'''

같은 인덱스의 두 리스트를 dict로 묶어줄수있다
앞을 key 뒤를 value로 

'''



#--------------------------------------------------------
#if pass


# number= int(input("숫자 입력 해주세요 :"))

# if number%2==0 :print("짝수 입니다.")
# else: print('홀')

#-----------------------------------------------
# num=input('시간 :')

# if num[3:] =='00':
#     print('정각입니다.')
# else :
#     print('정각 아님')




# num=input('시간 :').split(':')       #--->리스트로 분리![00:00]

# num=input('시간 :').split(':')   
# map(int(num))


# data=list(map(int,input('시간').split(':')))
# if data[1] =='00':
#     print('정각입니다.')
# else :
#     print('정각 아님')


    

#map(int,['3','5'])#----> map은 리스트에서 요소를 때옴

#--------------------------------------------------

a=[80,75,100,95]
b=[105,70,65,80]
# 각 점수들이 0~100점 인지 판별하기
  # 점수 범위 밖 점수가 들어오면 '잘못된 점수 입니다' 출력
# 4과목 평균이 80이상이면 '합격' , 아니면 '불합격' 출력


#1:각점수 들이 0<= 점수<=100 범위에 있는지 확인
#2:1의 조건이 참일때 평균점수가 80점 이상인 조건 작성
#3:1의 조건이 참일때 출합격도 !
#4:1의 조건이 거짓일때 점수 오르


# a=[80,75,100,95]
# # b=[105,70,65,80]

# if (0<=a[0]<=100) and (0<=a[1]<=100) and (0<=a [2]<=100) and (0<=a[3]<=100) :
#     if sum(a)/len(a)>=80 :
#         print('합격')
#     else:
#         print('불합')
# else:
#     print('점수 잘못')


#---------------------

# a=list(map(int,input('점수 입력:').split()))

# if (0<=a[0]<=100) and (0<=a[1]<=100) and (0<=a [2]<=100) and (0<=a[3]<=100) :
#     if sum(a)/len(a)>=80 :
#         print('합격')
#     else:
#         print('불합')
# else:
#     print('점수 잘못')


#----------------------------------------------
# a=[85,100,67,59,94,73,42]

# for aa in a :   
#     if aa>=90 :
#         print(f'{aa}점: A 입니다.')
#     elif aa>=80:
#         print(f'{aa}점: b 입니다.')
#     elif aa>=70:
#         print(f'{aa}점: c 입니다.')
#     elif aa>=60:
#         print(f'{aa}점: d 입니다.')
#     else:
#         print(f'{aa}점: f 입니다.')


# a=[85,100,67,59,94,73,42]
# for aa in a :   
#     if aa>=90 :
#         print(f'{aa}점: A 입니다.')
#     elif 80<=aa<=89:
#         print(f'{aa}점: b 입니다.')
#     elif 79>=aa>=70:
#         print(f'{aa}점: c 입니다.')
#     elif 69>=aa>=60:
#         print(f'{aa}점: d 입니다.')
#     else:
#         print(f'{aa}점: f 입니다.')



# 거짓의 종류
# False
# 0
# []
# ()
# {}
# ''
# ""
#-->안에 문자 들어가있음 참!

#---------------------------
# i=10
# while i<19 :
#     print(i,end=' ')
#     i=i+2


# i=2
# j=5
# while i<=32 or j>=1 :
#     print(i,j,end=' ')
#     i=i*2
#     j=j-1

# print()
# i=2
# j=5
# while i<=32 or j>=1 :
#     i=i*2
#     j=j-1
#     print(i,j,end='')
    
#---------------------------------
# balance=10000

# #-1350
# while balance >=0:

#while 써서1~100사이 홀수 출력
# i=1
# while i<=100:
#     if i%2==1:
#         print(i)
#     i=i+1


i=0
while i<=100:
    if i%2!=0:
        print(i)
    i=i+1

# i=0
# while i<100:
#     i=i+1
#     if i%2==1:
#         print(i)
    